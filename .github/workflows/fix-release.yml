name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release Version'
        required: true

jobs:
  fix:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22.2.0'

    - name: Install dependencies
      run: npm ci

    - name: Lint
      run: npm run lint

    - name: Run tests
      run: npm run test

    - name: Login to Yandex Container Registry
      run: echo ${{ secrets.YANDEX_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex

    - name: Build Docker image
      run: docker build -t cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} .

    - name: Tag Docker image
      run: |
        docker tag cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
        docker push cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
        docker push cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

    - name: Create fix release issue
      uses: actions/github-script@v5
      with:
        script: |
          const fs = require('fs');
          const releaseDate = new Date().toISOString().split('T')[0];
          const author = '${{ github.actor }}';
          const version = '${{ github.run_number }}';
          const dockerImage = `cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}`;
          const changelog = fs.readFileSync('CHANGELOG.md', 'utf8');
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Release v${version}`,
            body: `
              ## Fix Release details:
              **Date**: ${releaseDate}
              **Author**: ${author}
              **Fix Version**: v${version}
              **Docker Image**: ${dockerImage}

              ## Changelog
              ${changelog}
            `
          });