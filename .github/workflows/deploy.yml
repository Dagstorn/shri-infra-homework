name: Deploy

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release Version'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Install Yandex CLI
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_KEY }}
        script: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          exec -l $SHELL
          echo "$YC_OAUTH_TOKEN" | yc init --iam-token $YC_OAUTH_TOKEN --cloud-id $YC_CLOUD_ID --folder-id $YC_FOLDER_ID
          yc container registry configure-docker
          docker login -u oauth -p "$(yc iam create-token)" cr.yandex
          
    - name: Stop and Remove Existing Container
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_KEY }}
        script: |
          docker ps
          existing_container=$(docker ps -q --filter ancestor=shri-infra)
          if [ ! -z "$existing_container" ]; then
            docker stop $existing_container
            docker rm $existing_container
          fi
          docker ps

    - name: SSH and Deploy
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_KEY }}
        script: |
          echo "Login to Yandex Container Registry"
          echo ${{ secrets.YANDEX_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex
          docker pull cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
          container_id=$(docker run -d -p 3000:3000 cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest)
          echo "Container ID: $container_id"
          echo "Docker running the app"
          docker ps
          sleep 5
          docker exec -it $container_id /bin/sh -c "ls -al /app"
          sleep 2
          docker logs $container_id

env:
      YC_OAUTH_TOKEN: ${{ secrets.YC_OAUTH_TOKEN }}
      YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
      YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}